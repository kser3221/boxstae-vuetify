{"remainingRequest":"/home/test/boxstate-vuetify/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/test/boxstate-vuetify/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/test/boxstate-vuetify/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/test/boxstate-vuetify/src/views/BoxState-monitor.vue?vue&type=template&id=fbeef266&scoped=true&","dependencies":[{"path":"/home/test/boxstate-vuetify/src/views/BoxState-monitor.vue","mtime":1630432263591},{"path":"/home/test/boxstate-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":1630402238085},{"path":"/home/test/boxstate-vuetify/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1630402237221},{"path":"/home/test/boxstate-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":1630402238085},{"path":"/home/test/boxstate-vuetify/node_modules/vue-loader/lib/index.js","mtime":1630402237221}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}