{"remainingRequest":"/home/test/boxstate-vuetify/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/test/boxstate-vuetify/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/test/boxstate-vuetify/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/test/boxstate-vuetify/src/views/BoxState-monitor.vue?vue&type=template&id=fbeef266&scoped=true&","dependencies":[{"path":"/home/test/boxstate-vuetify/src/views/BoxState-monitor.vue","mtime":1630457832214},{"path":"/home/test/boxstate-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":1630402238085},{"path":"/home/test/boxstate-vuetify/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1630402237221},{"path":"/home/test/boxstate-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":1630402238085},{"path":"/home/test/boxstate-vuetify/node_modules/vue-loader/lib/index.js","mtime":1630402237221}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAiYm94LXN0YXRlIiB9LAogICAgWwogICAgICBfYygiU2VhcmNoRGl2IiwgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICBzZWFyY2hPcHRpb246IF92bS5zZWFyY2hfb3B0LAogICAgICAgICAgc2VhcmNoVHlwZTogX3ZtLnNlYXJjaF90eXBlLAogICAgICAgICAgc2VhcmNoVmFsdWU6IF92bS5zZWFyY2hfdmFsCiAgICAgICAgfSwKICAgICAgICBvbjogeyBzZWFyY2hFOiBfdm0uc2VhcmNoQ2xpY2sgfQogICAgICB9KSwKICAgICAgX2MoCiAgICAgICAgInYtcm93IiwKICAgICAgICB7IGF0dHJzOiB7IGRlbnNlOiAiIiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgY29sczogIjEyIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibWEtMiIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IG91dGxpbmVkOiAiIiwgY29sb3I6ICJpbmRpZ28iIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgX3ZtLmFsbExpc3Quc3RhdHVzID0gIV92bS5hbGxMaXN0LnN0YXR1cwogICAgICAgICAgICAgICAgICAgICAgX3ZtLmZpbHRlckNsaWNrCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygidi1pY29uIiwgW192bS5fdihfdm0uX3MoX3ZtLmFsbExpc3QuaWNvbikpXSksCiAgICAgICAgICAgICAgICAgIF92bS5fdigiIOyghOyytCAiKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYS0yIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgb3V0bGluZWQ6ICIiLCBjb2xvcjogImluZGlnbyIgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0uaWZMaXN0LnN0YXR1cyA9ICFfdm0uaWZMaXN0LnN0YXR1cwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInYtaWNvbiIsIFtfdm0uX3YoX3ZtLl9zKF92bS5pZkxpc3QuaWNvbikpXSksCiAgICAgICAgICAgICAgICAgIF92bS5fdigiIOyXsOqysOyepeyVoCAiKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYS0yIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgb3V0bGluZWQ6ICIiLCBjb2xvcjogImluZGlnbyIgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0ubGluZUxpc3Quc3RhdHVzID0gIV92bS5saW5lTGlzdC5zdGF0dXMKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJ2LWljb24iLCBbX3ZtLl92KF92bS5fcyhfdm0ubGluZUxpc3QuaWNvbikpXSksCiAgICAgICAgICAgICAgICAgIF92bS5fdigiIO2ajOyEoOyepeyVoCAiKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYS0yIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgb3V0bGluZWQ6ICIiLCBjb2xvcjogImluZGlnbyIgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0udHVuTGlzdC5zdGF0dXMgPSAhX3ZtLnR1bkxpc3Quc3RhdHVzCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygidi1pY29uIiwgW192bS5fdihfdm0uX3MoX3ZtLnR1bkxpc3QuaWNvbikpXSksCiAgICAgICAgICAgICAgICAgIF92bS5fdigiIO2EsOuEkOyepeyVoCAiKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgInYtcm93IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAibWludXMtdG9wLW1nIiwgYXR0cnM6IHsgZGVuc2U6ICIiIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygidi1jb2wiLCB7IGF0dHJzOiB7IGNvbHM6ICIxMCIgfSB9LCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJhZHZpY2UiIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImxhYmVsIiwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIuqygOyDiSDsnqXruYQ6IOy0nSAiICsgX3ZtLl9zKF92bS5saXN0cy5sZW5ndGgpICsgIiDrjIAiKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIuyduO2EsO2OmOydtOyKpOyDge2DnC0iKV0pLAogICAgICAgICAgICAgICAgX2MoInYtaW1nIiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9pbWcvYm94X3N0YXRlL3VwLnBuZyIpLAogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMTgiLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjE4IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiVXAiKV0pLAogICAgICAgICAgICAgICAgX2MoInYtaW1nIiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9pbWcvYm94X3N0YXRlL2Rvd24ucG5nIiksCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIxOCIsCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMTgiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJEb3duIildKSwKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiLyBMVEXrp53sg4Htg5wtIildKSwKICAgICAgICAgICAgICAgIF9jKCJ2LWltZyIsIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvaW1nL2JveF9zdGF0ZS9sdGVfbm9ybWFsLnBuZyIpLAogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMTgiLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjE4IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiTm9ybWFsIildKSwKICAgICAgICAgICAgICAgIF9jKCJ2LWltZyIsIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvaW1nL2JveF9zdGF0ZS9sdGVfZXJyb3IucG5nIiksCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIxOCIsCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMTgiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJFcnJvciIpXSksCiAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIi8g7Jew6rKw7IOB7YOcLSIpXSksCiAgICAgICAgICAgICAgICBfYygidi1pbWciLCB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2ltZy9ib3hfc3RhdGUvbGluZV9ub3JtYWwucG5nIiksCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIxOCIsCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMTgiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJOb3JtYWwiKV0pLAogICAgICAgICAgICAgICAgX2MoInYtaW1nIiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9pbWcvYm94X3N0YXRlL2xpbmVfc2Vydl9lcnJvci5wbmciKSwKICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjE4IiwKICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIxOCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIlNlcnZpY2UgRXJyb3IiKV0pLAogICAgICAgICAgICAgICAgX2MoInYtaW1nIiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9pbWcvYm94X3N0YXRlL2xpbmVfZXJyb3IucG5nIiksCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIxOCIsCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMTgiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJFcnJvciIpXSksCiAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIi8g7KCE7JuQ7IOB7YOcLSIpXSksCiAgICAgICAgICAgICAgICBfYygidi1pbWciLCB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2ltZy9ib3hfc3RhdGUvb24ucG5nIiksCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIxOCIsCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMTgiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJPbiIpXSksCiAgICAgICAgICAgICAgICBfYygidi1pbWciLCB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2ltZy9ib3hfc3RhdGUvb2ZmLnBuZyIpLAogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMTgiLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjE4IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiT2ZmIildKSwKICAgICAgICAgICAgICAgIF9jKCJ2LWltZyIsIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvaW1nL2JveF9zdGF0ZS9ub3JtYWwucG5nIiksCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIxOCIsCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMTgiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJOb3JtYWwiKV0pLAogICAgICAgICAgICAgICAgX2MoInYtaW1nIiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9pbWcvYm94X3N0YXRlL2Vycm9yLnBuZyIpLAogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMTgiLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjE4IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiRXJyb3IiKV0pCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgY29sczogIjIiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJ2LXNlbGVjdCIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAic2VsZWN0XzE1MCIsCiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICBpdGVtczogX3ZtLmNvbF9sYWJlbCwKICAgICAgICAgICAgICAgICAgbXVsdGlwbGU6ICIiLAogICAgICAgICAgICAgICAgICBkZW5zZTogIiIsCiAgICAgICAgICAgICAgICAgIG91dGxpbmVkOiAiIiwKICAgICAgICAgICAgICAgICAgInJldHVybi1vYmplY3QiOiAiIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAga2V5OiAic2VsZWN0aW9uIiwKICAgICAgICAgICAgICAgICAgICBmbjogZnVuY3Rpb24ocmVmKSB7CiAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IHJlZi5pdGVtCiAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5kZXggPSByZWYuaW5kZXgKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID09PSAwCiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJncmV5LS10ZXh0IGNhcHRpb24iIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCLsu6zrn7ztjrjsp5EiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uc2VsZWN0ZWRIZWFkZXJzLAogICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgX3ZtLnNlbGVjdGVkSGVhZGVycyA9ICQkdgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAic2VsZWN0ZWRIZWFkZXJzIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgInYtcm93IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAibWludXMtdG9wLW1nIiB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAidi1jb2wiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidnMtdGFibGUiLCBhdHRyczogeyBjb2xzOiAiMTIiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJ2LWRhdGEtdGFibGUiLCB7CiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2Nyb2xsIiwKICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zY3JvbGw6I3ZpcnR1YWwtc2Nyb2xsLXRhYmxlIiwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLm9uU2Nyb2xsLAogICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJvblNjcm9sbCIsCiAgICAgICAgICAgICAgICAgICAgYXJnOiAiI3ZpcnR1YWwtc2Nyb2xsLXRhYmxlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJlbGV2YXRpb24tMSB2cy10YWJsZS13cmFwIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICJmaWxsLWhlaWdodCI6ICIiLAogICAgICAgICAgICAgICAgICBpZDogInZpcnR1YWwtc2Nyb2xsLXRhYmxlIiwKICAgICAgICAgICAgICAgICAgZGVuc2U6ICIiLAogICAgICAgICAgICAgICAgICBoZWFkZXJzOiBfdm0uc2hvd0hlYWRlcnMsCiAgICAgICAgICAgICAgICAgIGl0ZW1zOiBfdm0ubGlzdHNMaW1pdGVkLAogICAgICAgICAgICAgICAgICAiaXRlbS1rZXkiOiAibmFtZSIsCiAgICAgICAgICAgICAgICAgICJkaXNhYmxlLXBhZ2luYXRpb24iOiAiIiwKICAgICAgICAgICAgICAgICAgImhpZGUtZGVmYXVsdC1oZWFkZXIiOiAiIiwKICAgICAgICAgICAgICAgICAgImhpZGUtZGVmYXVsdC1mb290ZXIiOiAiIiwKICAgICAgICAgICAgICAgICAgImZpeGVkLWhlYWRlciI6ICIiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgImNsaWNrOnJvdyI6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIF92bS5kaWFsb2cgPSB0cnVlCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBzY29wZWRTbG90czogX3ZtLl91KAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAga2V5OiAiaGVhZGVyIiwKICAgICAgICAgICAgICAgICAgICAgIGZuOiBmdW5jdGlvbihyZWYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGhlYWRlcnMgPSByZWYucHJvcHMuaGVhZGVycwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJ0aGVhZCIsIHsgc3RhdGljQ2xhc3M6ICJ2LWRhdGEtdGFibGUtaGVhZGVyIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRyIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5zaG93SGVhZGVycywgZnVuY3Rpb24oaCwgaSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoIWgucGFyZW50ICYmICFoLmNoaWxkcmVuKSB8fAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaC5jaGlsZHJlbiA+IDAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRoIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGgudmFsdWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRleHQtY2VudGVyIHBhcmVudC1oZWFkZXIgdGQtYm9yZGVyLXN0eWxlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvd3NwYW46IGguY2hpbGRyZW4gPyAxIDogMiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sc3BhbjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoLmNoaWxkcmVuID4gMCA/IGguY2hpbGRyZW4gOiAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhoLnBhcmVudCA/IGgucGFyZW50IDogaC50ZXh0KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidHIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLnNob3dIZWFkZXJzLCBmdW5jdGlvbihoLCBpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGgucGFyZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ0aCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBoLnZhbHVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ0ZXh0LWNlbnRlciBwYXJlbnQtaGVhZGVyIHRkLWJvcmRlci1zdHlsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKGgudGV4dCkpXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgX3ZtLnN0YXJ0ID4gMAogICAgICAgICAgICAgICAgICAgICAgPyB7CiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiAiYm9keS5wcmVwZW5kIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBmbjogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInRkIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICJwYWRkaW5nLXRvcDoiICsgX3ZtLnN0YXJ0SGVpZ2h0ICsgInB4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBwcm94eTogdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICA6IG51bGwsCiAgICAgICAgICAgICAgICAgICAgX3ZtLnN0YXJ0ICsgX3ZtLnBlclBhZ2UgPCB0aGlzLmxpc3RzLmxlbmd0aAogICAgICAgICAgICAgICAgICAgICAgPyB7CiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiAiYm9keS5hcHBlbmQiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGZuOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJ0ciIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidGQiLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogInBhZGRpbmctdG9wOiIgKyBfdm0uZW5kSGVpZ2h0ICsgInB4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBwcm94eTogdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICA6IG51bGwKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgbnVsbCwKICAgICAgICAgICAgICAgICAgdHJ1ZQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgInYtZGlhbG9nIiwKICAgICAgICB7CiAgICAgICAgICBhdHRyczogeyBzY3JvbGxhYmxlOiAiIiwgIm1heC13aWR0aCI6ICI5MCUiIH0sCiAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICB2YWx1ZTogX3ZtLmRpYWxvZywKICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgIF92bS5kaWFsb2cgPSAkJHYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZXhwcmVzc2lvbjogImRpYWxvZyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAidi1jYXJkIiwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtdGFicyIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJmaXhlZC10YWJzIjogIiIgfSwKICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnRhYiwKICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0udGFiID0gJCR2CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAidGFiIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgX3ZtLl9sKF92bS50YWJzLCBmdW5jdGlvbihpdGVtKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfYygidi10YWIiLCB7IGtleTogaXRlbS50YWIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoaXRlbS50ZXh0KSArICIgIikKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoInYtZGl2aWRlciIpLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtY2FyZC10ZXh0IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljU3R5bGU6IHsgaGVpZ2h0OiAiNjAwcHgiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtdGFicy1pdGVtcyIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0YWItaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnRhYiwKICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS50YWIgPSAkJHYKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInRhYiIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0udGFicywgZnVuY3Rpb24oaXRlbSkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAidi10YWItaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsga2V5OiBpdGVtLnRhYiB9LAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1jYXJkIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgZmxhdDogIiIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAia2VlcC1hbGl2ZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW19jKGl0ZW0uY29udGVudCwgeyB0YWc6ICJjb21wb25lbnQiIH0pXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoInYtZGl2aWRlciIpLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtY2FyZC1hY3Rpb25zIiwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBjb2xvcjogImJsdWUgZGFya2VuLTEiLCB0ZXh0OiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5kaWFsb2cgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIg64urIOq4sCAiKV0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}