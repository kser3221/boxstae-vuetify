{"remainingRequest":"/home/test/app-vuetify/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/test/app-vuetify/src/views/boxstate/Boxstate-traffic.vue?vue&type=style&index=0&id=4eb52bd6&scoped=true&lang=css&","dependencies":[{"path":"/home/test/app-vuetify/src/views/boxstate/Boxstate-traffic.vue","mtime":1630399586950},{"path":"/home/test/app-vuetify/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/test/app-vuetify/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/test/app-vuetify/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/test/app-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/test/app-vuetify/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc21hbGwgewoJZGlzcGxheTogaW5saW5lLWJsb2NrOwoJd2lkdGg6IDMwJTsKCW1hcmdpbjogMTBweDsKfQo="},{"version":3,"sources":["Boxstate-traffic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkSA;AACA;AACA;AACA;AACA","file":"Boxstate-traffic.vue","sourceRoot":"src/views/boxstate","sourcesContent":["<template>\n\t<div class=\"boxstate-traffic\">\n\t\t<div class=\"small\" v-for=\"(chart, i) in charts\" :key=\"i\">\n\t\t\t<v-row>\n\t\t\t\t<v-col cols=\"7\">\n\t\t\t\t\t<v-icon>mdi-chevron-double-right</v-icon>\n\t\t\t\t\t<span> {{ chart.title }} : {{ chart.ip }}{{ chart.if_name }}{{ chart.sub_device_name }}</span>\n\t\t\t\t</v-col>\n\t\t\t\t<v-col cols=\"5\">\n\t\t\t\t\t<v-select\n\t\t\t\t\t  :items=\"times\"\n\t\t\t\t\t  v-model=\"chart.sel_time\"\n\t\t\t\t\t  outlined\n\t\t\t\t\t  dense\n\t\t\t\t\t  @change=\"fillData(chart)\"\n\t\t\t\t\t></v-select>\n\t\t\t\t</v-col>\n\t\t\t</v-row>\n\t\t\t<div>\n\t\t\t\t<span>평균(Max) : </span>\n\t\t\t\t<label>{{ chart.up_avg }}{{ chart.up_avg_unit }} ({{ chart.up_max }}{{ chart.up_max_unit }}) / {{ chart.down_avg }}{{ chart.down_avg_unit }} ({{ chart.down_max }}{{ chart.down_max_unit }})</label>\n\t\t\t</div>\n\t\t\t<mng-line-chart :chart-data=\"chart.data\"/>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport MngLineChart from '@/components/chart/MngLineChart'\nimport dayjs from 'dayjs'\n\nexport default {\n\tname: 'BoxsateTraffic',\n\tcomponents: {\n\t\tMngLineChart\n\t},\n\tdata: () => ({\n\t\tcharts: [\n\t\t{\n\t\t\ttitle: 'ETH0',\n\t\t\tip: Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)),\n\t\t\tif_name: 'WAN0',\n\t\t\tsub_device_name: '',\n\t\t\tup_avg: 1.04,\n\t\t\tup_avg_unit: 'Kbps',\n\t\t\tup_max: 2.04,\n\t\t\tup_max_unit: 'Kbps',\n\t\t\tdown_avg: 1.04,\n\t\t\tdown_avg_unit: 'Kbps',\n\t\t\tdown_max: 2.04,\n\t\t\tdown_max_unit: 'Kbps',\n\t\t\tsel_time:1,\n\t\t\tdata:null\n\t\t},\n\t\t{\n\t\t\ttitle: 'ETH1',\n\t\t\tip: Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)),\n\t\t\tif_name: 'WAN0',\n\t\t\tsub_device_name: '',\n\t\t\tup_avg: 1.04,\n\t\t\tup_avg_unit: 'Kbps',\n\t\t\tup_max: 2.04,\n\t\t\tup_max_unit: 'Kbps',\n\t\t\tdown_avg: 1.04,\n\t\t\tdown_avg_unit: 'Kbps',\n\t\t\tdown_max: 2.04,\n\t\t\tdown_max_unit: 'Kbps',\n\t\t\tsel_time:1,\n\t\t\tdata:null\n\t\t},\n\t\t{\n\t\t\ttitle: 'ETH2',\n\t\t\tip: Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)),\n\t\t\tif_name: 'WAN0',\n\t\t\tsub_device_name: '',\n\t\t\tup_avg: 1.04,\n\t\t\tup_avg_unit: 'Kbps',\n\t\t\tup_max: 2.04,\n\t\t\tup_max_unit: 'Kbps',\n\t\t\tdown_avg: 1.04,\n\t\t\tdown_avg_unit: 'Kbps',\n\t\t\tdown_max: 2.04,\n\t\t\tdown_max_unit: 'Kbps',\n\t\t\tsel_time:1,\n\t\t\tdata:null\n\t\t},\n\t\t{\n\t\t\ttitle: 'ETH3',\n\t\t\tip: Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)),\n\t\t\tif_name: 'WAN0',\n\t\t\tsub_device_name: '',\n\t\t\tup_avg: 1.04,\n\t\t\tup_avg_unit: 'Kbps',\n\t\t\tup_max: 2.04,\n\t\t\tup_max_unit: 'Kbps',\n\t\t\tdown_avg: 1.04,\n\t\t\tdown_avg_unit: 'Kbps',\n\t\t\tdown_max: 2.04,\n\t\t\tdown_max_unit: 'Kbps',\n\t\t\tsel_time:1,\n\t\t\tdata:null\n\t\t},\n\t\t{\n\t\t\ttitle: 'ETH4',\n\t\t\tip: Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)),\n\t\t\tif_name: 'WAN0',\n\t\t\tsub_device_name: '',\n\t\t\tup_avg: 1.04,\n\t\t\tup_avg_unit: 'Kbps',\n\t\t\tup_max: 2.04,\n\t\t\tup_max_unit: 'Kbps',\n\t\t\tdown_avg: 1.04,\n\t\t\tdown_avg_unit: 'Kbps',\n\t\t\tdown_max: 2.04,\n\t\t\tdown_max_unit: 'Kbps',\n\t\t\tsel_time:1,\n\t\t\tdata:null\n\t\t},\n\t\t{\n\t\t\ttitle: 'ETH5',\n\t\t\tip: Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)),\n\t\t\tif_name: 'WAN0',\n\t\t\tsub_device_name: '',\n\t\t\tup_avg: 1.04,\n\t\t\tup_avg_unit: 'Kbps',\n\t\t\tup_max: 2.04,\n\t\t\tup_max_unit: 'Kbps',\n\t\t\tdown_avg: 1.04,\n\t\t\tdown_avg_unit: 'Kbps',\n\t\t\tdown_max: 2.04,\n\t\t\tdown_max_unit: 'Kbps',\n\t\t\tsel_time:1,\n\t\t\tdata:null\n\t\t},\n\t\t{\n\t\t\ttitle: 'ETH6',\n\t\t\tip: Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)),\n\t\t\tif_name: 'WAN0',\n\t\t\tsub_device_name: '',\n\t\t\tup_avg: 1.04,\n\t\t\tup_avg_unit: 'Kbps',\n\t\t\tup_max: 2.04,\n\t\t\tup_max_unit: 'Kbps',\n\t\t\tdown_avg: 1.04,\n\t\t\tdown_avg_unit: 'Kbps',\n\t\t\tdown_max: 2.04,\n\t\t\tdown_max_unit: 'Kbps',\n\t\t\tsel_time:1,\n\t\t\tdata:null\n\t\t},\n\t\t{\n\t\t\ttitle: 'ETH',\n\t\t\tip: Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)),\n\t\t\tif_name: 'WAN0',\n\t\t\tsub_device_name: '',\n\t\t\tup_avg: 1.04,\n\t\t\tup_avg_unit: 'Kbps',\n\t\t\tup_max: 2.04,\n\t\t\tup_max_unit: 'Kbps',\n\t\t\tdown_avg: 1.04,\n\t\t\tdown_avg_unit: 'Kbps',\n\t\t\tdown_max: 2.04,\n\t\t\tdown_max_unit: 'Kbps',\n\t\t\tsel_time:1,\n\t\t\tdata:null\n\t\t},\n\t\t{\n\t\t\ttitle: 'LAN0',\n\t\t\tip: Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)) + '.' + Math.floor((Math.random()*255)),\n\t\t\tif_name: 'WAN0',\n\t\t\tsub_device_name: '',\n\t\t\tup_avg: 1.04,\n\t\t\tup_avg_unit: 'Kbps',\n\t\t\tup_max: 2.04,\n\t\t\tup_max_unit: 'Kbps',\n\t\t\tdown_avg: 1.04,\n\t\t\tdown_avg_unit: 'Kbps',\n\t\t\tdown_max: 2.04,\n\t\t\tdown_max_unit: 'Kbps',\n\t\t\tsel_time:1,\n\t\t\tdata:null\n\t\t},\n\t\t],\n\t\ttimes: [\n\t\t\t{ value: 1, text: '6h'},\n\t\t\t{ value: 2, text: '12h'},\n\t\t\t{ value: 3, text: '24h'},\n\t\t\t{ value: 4, text: '1Week'},\n\t\t\t{ value: 5, text: '1Month'},\n\t\t\t{ value: 6, text: '1Year'},\n\t\t],\n\t}),\n\tmethods: {\n\t\tfillData (c) {\n\t\t\tthis.charts.map((d, i) => {\n\t\t\t\tif(c && c.title) {\n\t\t\t\t\tif(c.title != d.title) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\td.data = {\n\t\t\t\t\tlabels: this.getTime(c.sel_time),\n\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'UP',\n\t\t\t\t\t\t\tbackgroundColor: '#f87979',\n\t\t\t\t\t\t\tdata: [this.getRandomInt(), this.getRandomInt(), this.getRandomInt(), this.getRandomInt()]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'DOWN',\n\t\t\t\t\t\t\tbackgroundColor: '#387979',\n\t\t\t\t\t\t\tdata: [-(this.getRandomInt()), -(this.getRandomInt()), -(this.getRandomInt()), -(this.getRandomInt())]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\n\t\t\t\td.up_avg = this.getAvg(d.data.datasets[0].data);\n\t\t\t\td.up_max = this.getMax(d.data.datasets[0].data);\n\t\t\t\td.down_avg = this.getAvg(d.data.datasets[1].data);\n\t\t\t\td.down_max = this.getMax(d.data.datasets[1].data);\n\t\t\t});\n\t\t\t/*\n\t\t\tthis.cpuData = {\n\t\t\t\tlabels: [this.getRandomInt(), this.getRandomInt()],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Data One',\n\t   \t\t\t\t\tbackgroundColor: '#f87979',\n\t   \t\t\t\t\tdata: [this.getRandomInt(), this.getRandomInt()]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\t*/\n\t\t},\n\t\tgetRandomInt () {\n\t\t\treturn Math.floor(Math.random() * (50 - 5 + 1)) + 5\n\t\t},\n\t\tgetTime(type) {\n\t\t\tvar range = [];\n\t\t\tvar now = dayjs().format(\"YYYY-MM-DD HH:mm:ss\");\n\n\t\t\tif(type == 1) {\n\t\t\t\trange.push(dayjs(now).subtract(6, 'hour').format('HH:mm'));\n\t\t\t\trange.push(dayjs(now).subtract(4.5, 'hour').format('HH:mm'));\n\t\t\t\trange.push(dayjs(now).subtract(3, 'hour').format('HH:mm'));\n\t\t\t\trange.push(dayjs(now).subtract(1.5, 'hour').format('HH:mm'));\n\t\t\t} else if(type == 2) {\n\t\t\t\trange.push(dayjs(now).subtract(12, 'hour').format('HH:mm'));\n\t\t\t\trange.push(dayjs(now).subtract(9, 'hour').format('HH:mm'));\n\t\t\t\trange.push(dayjs(now).subtract(6, 'hour').format('HH:mm'));\n\t\t\t\trange.push(dayjs(now).subtract(3, 'hour').format('HH:mm'));\n\t\t\t} else if(type == 3) {\n\t\t\t\trange.push(dayjs(now).subtract(24, 'hour').format('HH:mm'));\n\t\t\t\trange.push(dayjs(now).subtract(18, 'hour').format('HH:mm'));\n\t\t\t\trange.push(dayjs(now).subtract(12, 'hour').format('HH:mm'));\n\t\t\t\trange.push(dayjs(now).subtract(6, 'hour').format('HH:mm'));\n\t\t\t} else if(type == 4) {\n\t\t\t\trange.push(dayjs(now).subtract(4, 'day').format('DD일 HH시'));\n\t\t\t\trange.push(dayjs(now).subtract(3, 'day').format('DD일 HH시'));\n\t\t\t\trange.push(dayjs(now).subtract(2, 'day').format('DD일 HH시'));\n\t\t\t\trange.push(dayjs(now).subtract(1, 'day').format('DD일 HH시'));\n\t\t\t} else if(type == 5) {\n\t\t\t\trange.push(dayjs(now).subtract(4, 'week').format('MM/DD'));\n\t\t\t\trange.push(dayjs(now).subtract(3, 'week').format('MM/DD'));\n\t\t\t\trange.push(dayjs(now).subtract(2, 'week').format('MM/DD'));\n\t\t\t\trange.push(dayjs(now).subtract(1, 'week').format('MM/DD'));\n\t\t\t} else if(type == 6) {\n\t\t\t\trange.push(dayjs(now).subtract(12, 'month').format('YY년 MM월'));\n\t\t\t\trange.push(dayjs(now).subtract(9, 'month').format('YY년 MM월'));\n\t\t\t\trange.push(dayjs(now).subtract(6, 'month').format('YY년 MM월'));\n\t\t\t\trange.push(dayjs(now).subtract(3, 'month').format('YY년 MM월'));\n\t\t\t}\n\t\t\treturn range;\n\t\t},\n\t\tgetAvg(arr) {\n\t\t\tvar sum = arr => arr.reduce((a,c) => (a += c),0); // add equals and init with 0\n\t\t\tvar avg = sum(arr) / arr.length;\n\t\t\treturn avg;\n\t\t},\n\t\tgetMax(arr) {\n\t\t\treturn Math.max.apply(Math, arr);\n\t\t},\n\t},\n\tcreated() {\n\t\tthis.fillData({sel_time: 1})\n\t},\n}\n</script>\n\n<style scoped>\n.small {\n\tdisplay: inline-block;\n\twidth: 30%;\n\tmargin: 10px;\n}\n</style>\n"]}]}