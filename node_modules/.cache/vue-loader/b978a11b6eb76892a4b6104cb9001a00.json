{"remainingRequest":"/home/test/app-vuetify/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/test/app-vuetify/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/test/app-vuetify/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/test/app-vuetify/src/views/BoxState-monitor.vue?vue&type=template&id=fbeef266&scoped=true&","dependencies":[{"path":"/home/test/app-vuetify/src/views/BoxState-monitor.vue","mtime":1628223747662},{"path":"/home/test/app-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/test/app-vuetify/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/test/app-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/test/app-vuetify/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}